---
- name: Check if local cluster config exists
  stat:
    path: /etc/kubernetes/admin.conf
  register: local_kubeconfig

- name: Check if current cluster is local
  command: kubectl config view --minify -o jsonpath='{.clusters[0].cluster.server}'
  register: current_cluster
  ignore_errors: true
  changed_when: false

- name: Set local cluster flag
  set_fact:
    is_local_cluster: "{{ current_cluster.stdout is defined and current_cluster.stdout == 'https://127.0.0.1:6443' }}"

- name: Backup existing kubeconfig
  copy:
    src: "{{ ansible_env.HOME }}/.kube/config"
    dest: "{{ ansible_env.HOME }}/.kube/config.backup.{{ ansible_date_time.iso8601_basic }}"
    remote_src: yes
  when: 
    - current_cluster.rc == 0
    - not is_local_cluster

- name: Install kubeadm and required packages if Kubernetes is not running
  when: not local_kubeconfig.stat.exists
  block:
    - name: Add Kubernetes apt repository
      apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /
        state: present
        filename: kubernetes

    - name: Create directory for apt keyring
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Kubernetes apt key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        mode: '0644'

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install kubeadm, kubectl, and kubelet
      apt:
        name:
          - kubeadm
          - kubectl
          - kubelet
        state: present

    - name: Initialize Kubernetes cluster
      command: kubeadm init --pod-network-cidr=10.244.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Create .kube directory
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: '0755'

    - name: Copy kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        remote_src: yes
        mode: '0644'

    - name: Install Calico network plugin
      command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/calico.yaml
      args:
        creates: "{{ ansible_env.HOME }}/.kube/config"

    - name: Wait for Kubernetes to be ready
      command: kubectl get nodes
      register: k8s_ready
      until: k8s_ready.rc == 0
      retries: 30
      delay: 10
      changed_when: false


- name: Switch to local cluster if needed
  when: 
      - local_kubeconfig.stat.exists
      - not is_local_cluster
  block:
    - name: Copy local kubeconfig
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        remote_src: yes
        mode: '0644'
      when: not is_local_cluster

    - name: Verify local cluster connection
      command: kubectl cluster-info
      register: local_cluster_check
      changed_when: false
      failed_when: local_cluster_check.rc != 0

  

